---
// Frontend page for trip countdown
import config from '../config.js';

// Extract trip configuration
const tripDate = config.trip.date;
const tripDescription = config.trip.description;
const title = config.frontend.title;

const pageTitle = "Cuenta Regresiva del Viaje";

// Calculate initial countdown
const now = new Date().getTime();
const distance = tripDate - now;

const days = Math.floor(distance / (1000 * 60 * 60 * 24));
const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
const seconds = Math.floor((distance % (1000 * 60)) / 1000);

// Check if we're in development mode (Astro way)
const isDevelopment = Astro.url.hostname === 'localhost' || Astro.url.hostname === '127.0.0.1';
---

<!DOCTYPE html>
<html lang="es" class="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{pageTitle}</title>
    <link rel="stylesheet" href="/src/styles/global.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <meta name="theme-color" content="#f97316">
    <meta name="description" content="Cuenta regresiva moderna para tu pr√≥ximo viaje">
</head>

<body class="min-h-screen bg-gradient-light dark:bg-gradient-dark bg-fixed overflow-hidden relative">
    <!-- Animated background patterns -->
    <div class="absolute inset-0 bg-dots-pattern bg-repeat opacity-20 dark:opacity-10"></div>
    <div class="absolute inset-0">
        <div class="absolute top-10 left-10 w-32 h-32 bg-white/10 rounded-full blur-xl animate-pulse-slow"></div>
        <div class="absolute top-1/3 right-20 w-24 h-24 bg-white/5 rounded-full blur-lg animate-bounce-slow"></div>
        <div class="absolute bottom-20 left-1/4 w-40 h-40 bg-white/5 rounded-full blur-2xl animate-pulse-slow"></div>
    </div>

    <!-- Dark mode toggle -->
    <button 
        id="theme-toggle" 
        class="fixed top-6 right-6 z-50 p-3 bg-white/20 dark:bg-dark-800/30 backdrop-blur-sm rounded-full shadow-lg hover:bg-white/30 dark:hover:bg-dark-700/40 transition-all duration-300 group"
        aria-label="Toggle dark mode"
    >
        <svg class="w-6 h-6 text-white transition-transform duration-300 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path class="sun-icon" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
            <path class="moon-icon hidden" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
        </svg>
    </button>

    <!-- Development WhatsApp button -->
    {isDevelopment && (
      <button 
        id="dev-whatsapp-btn" 
        class="fixed top-4 left-4 sm:top-6 sm:left-6 px-4 py-2 rounded-full bg-green-500/80 hover:bg-green-500 backdrop-blur-sm border border-green-400/50 text-white font-medium transition-all duration-300 hover:scale-105 z-50 flex items-center gap-2 animate-pulse hover:animate-none"
        aria-label="Enviar WhatsApp de prueba"
      >
        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
          <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.787"/>
        </svg>
        <span class="hidden sm:inline">WhatsApp Test</span>
      </button>
    )}

    <main class="relative z-10 min-h-screen flex flex-col items-center justify-center px-4 py-8">
        <!-- Header -->
        <div class="text-center mb-12 animate-fade-in">
            <h1 class="text-4xl md:text-6xl lg:text-7xl font-bold text-white mb-4 tracking-tight">
                {title}
            </h1>
            <p class="text-lg md:text-xl text-white/80 font-light">
                Cuenta regresiva para tu pr√≥xima aventura
            </p>
        </div>

        <!-- Countdown Display -->
        <div id="countdown-display" class="w-full max-w-6xl mx-auto animate-scale-in">
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4 md:gap-8 mb-8">
                <!-- Days -->
                <div class="countdown-circle-container group">
                    <div class="countdown-circle">
                        <div class="absolute inset-0 rounded-full bg-gradient-to-br from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                        <div class="relative z-10 text-center">
                            <span class="countdown-number" id="days">{days}</span>
                            <span class="countdown-label">D√çAS</span>
                        </div>
                        <!-- Animated ring -->
                        <div class="absolute inset-[-4px] rounded-full border-2 border-white/30 animate-pulse-slow"></div>
                    </div>
                </div>

                <!-- Hours -->
                <div class="countdown-circle-container group">
                    <div class="countdown-circle">
                        <div class="absolute inset-0 rounded-full bg-gradient-to-br from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                        <div class="relative z-10 text-center">
                            <span class="countdown-number" id="hours">{hours}</span>
                            <span class="countdown-label">HORAS</span>
                        </div>
                        <div class="absolute inset-[-4px] rounded-full border-2 border-white/30 animate-pulse-slow" style="animation-delay: 0.5s;"></div>
                    </div>
                </div>

                <!-- Minutes -->
                <div class="countdown-circle-container group">
                    <div class="countdown-circle">
                        <div class="absolute inset-0 rounded-full bg-gradient-to-br from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                        <div class="relative z-10 text-center">
                            <span class="countdown-number" id="minutes">{minutes}</span>
                            <span class="countdown-label">MINUTOS</span>
                        </div>
                        <div class="absolute inset-[-4px] rounded-full border-2 border-white/30 animate-pulse-slow" style="animation-delay: 1s;"></div>
                    </div>
                </div>

                <!-- Seconds -->
                <div class="countdown-circle-container group">
                    <div class="countdown-circle">
                        <div class="absolute inset-0 rounded-full bg-gradient-to-br from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                        <div class="relative z-10 text-center">
                            <span class="countdown-number" id="seconds">{seconds}</span>
                            <span class="countdown-label">SEGUNDOS</span>
                        </div>
                        <div class="absolute inset-[-4px] rounded-full border-2 border-white/30 animate-pulse-slow" style="animation-delay: 1.5s;"></div>
                    </div>
                </div>
            </div>

            <!-- Trip Details -->
            <div class="text-center text-white/70 animate-slide-up">
                <p class="text-sm md:text-base font-medium">
                    üìÖ {tripDescription}
                </p>
            </div>
        </div>

        <!-- Trip Completed Message -->
        <div id="trip-message" class="hidden w-full max-w-2xl mx-auto text-center animate-scale-in">
            <div class="bg-white/10 dark:bg-dark-800/30 backdrop-blur-md rounded-3xl p-8 md:p-12 border border-white/20">
                <div class="text-6xl mb-6">‚úàÔ∏è</div>
                <h2 class="text-4xl md:text-6xl font-bold text-white mb-4">
                    {config.frontend.safe_travel_message}
                </h2>
                <p class="text-xl text-white/80">
                    ¬°Es hora de tu aventura!
                </p>
            </div>
        </div>
    </main>

    <style>
        .countdown-circle-container {
            @apply flex justify-center items-center;
        }
        
        .countdown-circle {
            @apply relative w-24 h-24 md:w-32 md:h-32 lg:w-40 lg:h-40 rounded-full bg-white/10 dark:bg-dark-800/20 backdrop-blur-md border border-white/20 dark:border-dark-600/30 flex items-center justify-center shadow-2xl transition-all duration-300 hover:scale-105 hover:bg-white/20 dark:hover:bg-dark-700/30;
        }
        
        .countdown-number {
            @apply block text-2xl md:text-4xl lg:text-5xl font-bold text-white leading-none;
        }
        
        .countdown-label {
            @apply block text-xs md:text-sm font-semibold text-white/80 tracking-wider mt-1;
        }
    </style>

    <script define:vars={{ tripDate: tripDate }}>
        // Target date for the trip from shared configuration
        const tripDateTime = new Date(tripDate).getTime();
        
        // Theme toggle functionality
        const themeToggle = document.getElementById('theme-toggle');
        const sunIcon = document.querySelector('.sun-icon');
        const moonIcon = document.querySelector('.moon-icon');
        
        // Check for saved theme or default to 'dark'
        const savedTheme = localStorage.getItem('theme') || 'dark';
        document.documentElement.classList.toggle('dark', savedTheme === 'dark');
        updateThemeIcon();
        
        themeToggle?.addEventListener('click', () => {
            const isDark = document.documentElement.classList.toggle('dark');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
            updateThemeIcon();
        });
        
        function updateThemeIcon() {
            const isDark = document.documentElement.classList.contains('dark');
            if (sunIcon && moonIcon) {
                sunIcon.classList.toggle('hidden', isDark);
                moonIcon.classList.toggle('hidden', !isDark);
            }
        }
        
        function updateCountdown() {
            const now = new Date().getTime();
            const distance = tripDateTime - now;
            
            if (distance < 0) {
                // Trip date has passed
                const countdownDisplay = document.getElementById('countdown-display');
                const tripMessage = document.getElementById('trip-message');
                if (countdownDisplay) countdownDisplay.style.display = 'none';
                if (tripMessage) tripMessage.classList.remove('hidden');
                return;
            }
            
            // Calculate time components
            const days = Math.floor(distance / (1000 * 60 * 60 * 24));
            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((distance % (1000 * 60)) / 1000);
            
            // Update DOM elements with null checks and smooth animations
            const elements = [
                { id: 'days', value: days },
                { id: 'hours', value: hours },
                { id: 'minutes', value: minutes },
                { id: 'seconds', value: seconds }
            ];
            
            elements.forEach(({ id, value }) => {
                const element = document.getElementById(id);
                if (element && element.textContent !== value.toString()) {
                    element.style.transform = 'scale(1.1)';
                    element.textContent = value.toString().padStart(2, '0');
                    setTimeout(() => {
                        element.style.transform = 'scale(1)';
                    }, 150);
                }
            });
        }
        
        // Update countdown immediately and then every second
        updateCountdown();
        setInterval(updateCountdown, 1000);
        
        // Add intersection observer for animations
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.animationPlayState = 'running';
                }
            });
        }, observerOptions);
        
        // Observe animated elements
        document.querySelectorAll('[class*="animate-"]').forEach(el => {
            observer.observe(el);
        });

        // Development WhatsApp button functionality
        if (isDevelopment) {
          const whatsappBtn = document.getElementById('dev-whatsapp-btn');
          whatsappBtn?.addEventListener('click', async () => {
            const originalText = whatsappBtn.innerHTML;
            
            // Show loading state
            whatsappBtn.innerHTML = `
              <svg class="w-5 h-5 animate-spin" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8v8h8a8 8 0 11-16 0z"></path>
              </svg>
              <span class="hidden sm:inline">Enviando...</span>
            `;
            whatsappBtn.disabled = true;
            
            try {
              const response = await fetch('http://localhost:3001/api/send-whatsapp', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                }
              });
              
              const result = await response.json();
              
              if (result.success) {
                // Show success state
                whatsappBtn.innerHTML = `
                  <svg class="w-5 h-5 text-green-300" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  <span class="hidden sm:inline">¬°Enviado!</span>
                `;
                
                // Reset after 3 seconds
                setTimeout(() => {
                  whatsappBtn.innerHTML = originalText;
                  whatsappBtn.disabled = false;
                  whatsappBtn.classList.add('animate-pulse');
                }, 3000);
                
              } else {
                throw new Error(result.error || 'Error desconocido');
              }
              
            } catch (error) {
              console.error('Error:', error);
              
              // Show error state
              whatsappBtn.innerHTML = `
                <svg class="w-5 h-5 text-red-300" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                </svg>
                <span class="hidden sm:inline">Error</span>
              `;
              
              // Reset after 3 seconds
              setTimeout(() => {
                whatsappBtn.innerHTML = originalText;
                whatsappBtn.disabled = false;
                whatsappBtn.classList.add('animate-pulse');
              }, 3000);
            }
          });
        }
    </script>
</body>
</html> 